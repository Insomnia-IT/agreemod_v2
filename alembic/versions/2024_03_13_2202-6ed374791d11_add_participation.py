"""add_participation

Revision ID: 6ed374791d11
Revises: 606a14968f4e
Create Date: 2024-03-13 22:02:57.204859

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy import orm
from sqlalchemy.dialects import postgresql

from db.orm.dictionaries.participation_status import ParticipationStatusORM
from db.orm.dictionaries.transport_type import TransportTypeORM

# revision identifiers, used by Alembic.
revision: str = '6ed374791d11'
down_revision: Union[str, None] = '606a14968f4e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('participation_status',
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('to_list', sa.Boolean(), nullable=False),
    sa.Column('comment', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('code', name=op.f('pk_participation_status'))
    )
    op.create_table('transport_type',
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('comment', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('code', name=op.f('pk_transport_type'))
    )
    op.create_table('participation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('person_id', sa.String(), nullable=False),
    sa.Column('direction_id', sa.String(), nullable=False),
    sa.Column('role_code', sa.String(), nullable=True),
    sa.Column('participation_code', sa.String(), nullable=False),
    sa.Column('status_code', sa.String(), nullable=False),
    sa.Column('notion_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['direction_id'], ['direction.notion_id'], name=op.f('fk_participation_direction_id_direction')),
    sa.ForeignKeyConstraint(['participation_code'], ['participation_type.code'], name=op.f('fk_participation_participation_code_participation_type')),
    sa.ForeignKeyConstraint(['person_id'], ['person.notion_id'], name=op.f('fk_participation_person_id_person')),
    sa.ForeignKeyConstraint(['role_code'], ['participation_role.code'], name=op.f('fk_participation_role_code_participation_role')),
    sa.ForeignKeyConstraint(['status_code'], ['participation_status.code'], name=op.f('fk_participation_status_code_participation_status')),
    sa.PrimaryKeyConstraint('id', 'notion_id', name=op.f('pk_participation'))
    )
    op.create_table('arrival',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('badge_id', sa.String(), nullable=False),
    sa.Column('arrival_date', sa.Date(), nullable=False),
    sa.Column('arrival_transport', sa.String(), nullable=True),
    sa.Column('arrival_registered', sa.TIMESTAMP(), nullable=True),
    sa.Column('departure_date', sa.Date(), nullable=False),
    sa.Column('departure_transport', sa.String(), nullable=True),
    sa.Column('departure_registered', sa.TIMESTAMP(), nullable=True),
    sa.Column('extra_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('comment', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['badge_id'], ['badge.notion_id'], name=op.f('fk_arrival_badge_id_badge')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_arrival'))
    )
    # ### end Alembic commands ###
    session = orm.Session(bind=op.get_bind())
    session.add_all(ParticipationStatusORM.fill_table())
    session.add_all(TransportTypeORM.fill_table())
    session.commit()

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('arrival')
    op.drop_table('participation')
    op.drop_table('transport_type')
    op.drop_table('participation_status')
    # ### end Alembic commands ###
