"""add M2M badge connection direction

Revision ID: 2024_04_06_1925
Revises: 6ed374791d11
Create Date: 2024-04-06 19:25:16.899122

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "2024_04_06_1925"
down_revision: Union[str, None] = "6ed374791d11"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "badge_directions",
        sa.Column("badge_id", sa.String(), nullable=False),
        sa.Column("direction_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["badge_id"],
            ["badge.notion_id"],
            name=op.f("fk_badge_directions_badge_id_badge"),
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["direction_id"],
            ["direction.notion_id"],
            name=op.f("fk_badge_directions_direction_id_direction"),
            onupdate="CASCADE",
        ),
        sa.PrimaryKeyConstraint(
            "badge_id", "direction_id", name=op.f("pk_badge_directions")
        ),
    )
    op.drop_constraint("fk_badge_direction_id_direction", "badge", type_="foreignkey")
    op.drop_column("badge", "direction_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "badge",
        sa.Column("direction_id", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.create_foreign_key(
        "fk_badge_direction_id_direction",
        "badge",
        "direction",
        ["direction_id"],
        ["notion_id"],
    )
    op.drop_table("badge_directions")
    # ### end Alembic commands ###
