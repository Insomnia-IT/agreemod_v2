"""init

Revision ID: 86daa843ef7c
Revises: 
Create Date: 2024-03-04 18:58:53.108704

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '86daa843ef7c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('direction',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', postgresql.ENUM('CITY_SERVICE', 'FIELD_SERVICE', 'UNIVERSAL_SERVICE', 'FEDERAL_LOCATION', 'GRANT_LOCATION', 'COMMERCIAL_LOCATION', 'LATERAL_LOCATION', 'RESPONSIBILITY_AREA', name='directiontype'), nullable=True),
    sa.Column('first_year', sa.Integer(), nullable=True),
    sa.Column('last_year', sa.Integer(), nullable=True),
    sa.Column('notion_id', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('notion_id', name=op.f('pk_direction'))
    )
    op.create_table('person',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('nickname', sa.String(), nullable=True),
    sa.Column('other_names', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('gender', postgresql.ENUM('MALE', 'FEMALE', 'ATTACK_HELICOPTER_APACHE', name='gender'), nullable=True),
    sa.Column('birth_date', sa.Date(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('telegram', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('diet', postgresql.ENUM('STANDARD', 'VEGAN', name='diettype'), nullable=True),
    sa.Column('comment', sa.String(), nullable=True),
    sa.Column('notion_id', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('notion_id', name=op.f('pk_person'))
    )
    op.create_table('badge',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('nickname', sa.String(), nullable=True),
    sa.Column('gender', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('infant', sa.Boolean(), nullable=True),
    sa.Column('diet', postgresql.ENUM('STANDARD', 'VEGAN', name='diettype', create_type=False), nullable=True),
    sa.Column('feed', postgresql.ENUM('FREE', 'PAYMENT', 'UNAVAILABLE', name='feedtype'), nullable=True),
    sa.Column('number', sa.String(), nullable=False),
    sa.Column('batch', sa.Integer(), nullable=False),
    sa.Column('role', postgresql.ENUM('ORGANIZER', 'GRANT_LEADER', 'VICE_HEAD', 'BRIGADIER', 'VOLUNTEER', 'MEDICIAN', 'GRANT', 'BUDDY', 'VIP', 'PRESS', 'CONTRACTOR', 'ANIMATOR', 'LECTOR', 'MASTER', 'ARTIST', 'OTHER', name='participationrole'), nullable=False),
    sa.Column('position', sa.String(), nullable=True),
    sa.Column('photo', sa.String(), nullable=True),
    sa.Column('person', sa.String(), nullable=True),
    sa.Column('direction', sa.String(), nullable=True),
    sa.Column('comment', sa.String(), nullable=True),
    sa.Column('notion_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['direction'], ['direction.notion_id'], name=op.f('fk_badge_direction_direction')),
    sa.ForeignKeyConstraint(['person'], ['person.notion_id'], name=op.f('fk_badge_person_person')),
    sa.PrimaryKeyConstraint('notion_id', name=op.f('pk_badge')),
    sa.UniqueConstraint('number', name=op.f('uq_badge_number'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('badge')
    op.drop_table('person')
    op.drop_table('direction')
    # ### end Alembic commands ###
