"""create_and_populate_dict_tables

Revision ID: e9be6d966ab3
Revises: 2024_02_25_1614
Create Date: 2024-03-07 00:21:25.398285

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy import orm

from app.db.orm.dictionaries.badge_color import BadgeColorORM
from app.db.orm.dictionaries.direction_type import DirectionTypeORM
from app.db.orm.dictionaries.participation_role import ParticipationRoleORM
from app.db.orm.dictionaries.participation_type import ParticipationTypeORM
# revision identifiers, used by Alembic.
revision: str = 'e9be6d966ab3'
down_revision: Union[str, None] = '2024_02_25_1614'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('badge_color',
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('color', sa.String(), nullable=False),
    sa.Column('comment', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('code', name=op.f('pk_badge_color'))
    )
    op.create_table('direction_type',
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('is_federal', sa.Boolean(), nullable=False),
    sa.Column('comment', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('code', name=op.f('pk_direction_type'))
    )
    op.create_table('participation_type',
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('comment', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('code', name=op.f('pk_participation_type'))
    )
    op.create_table('participation_role',
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('badge_color', sa.String(), nullable=True),
    sa.Column('is_lead', sa.Boolean(), nullable=False),
    sa.Column('is_team', sa.Boolean(), nullable=False),
    sa.Column('is_free_feed', sa.Boolean(), nullable=True),
    sa.Column('comment', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['badge_color'], ['badge_color.code'], name=op.f('fk_participation_role_badge_color_badge_color')),
    sa.PrimaryKeyConstraint('code', name=op.f('pk_participation_role'))
    )
    op.create_table('badge',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('nickname', sa.String(), nullable=True),
    sa.Column('gender', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('infant', sa.Boolean(), nullable=True),
    sa.Column('diet', sa.String(), nullable=True),
    sa.Column('feed', sa.String(), nullable=True),
    sa.Column('number', sa.String(), nullable=False),
    sa.Column('batch', sa.Integer(), nullable=False),
    sa.Column('participation', sa.String(), nullable=False),
    sa.Column('role', sa.String(), nullable=True),
    sa.Column('photo', sa.String(), nullable=True),
    sa.Column('person', sa.String(), nullable=True),
    sa.Column('direction', sa.String(), nullable=True),
    sa.Column('comment', sa.String(), nullable=True),
    sa.Column('notion_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['direction'], ['direction.notion_id'], name=op.f('fk_badge_direction_direction')),
    sa.ForeignKeyConstraint(['participation'], ['participation_type.code'], name=op.f('fk_badge_participation_participation_type')),
    sa.ForeignKeyConstraint(['person'], ['person.notion_id'], name=op.f('fk_badge_person_person')),
    sa.ForeignKeyConstraint(['role'], ['participation_role.code'], name=op.f('fk_badge_role_participation_role')),
    sa.PrimaryKeyConstraint('notion_id', name=op.f('pk_badge')),
    sa.UniqueConstraint('number', name=op.f('uq_badge_number'))
    )
    op.alter_column('direction', 'type',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_foreign_key(op.f('fk_direction_type_direction_type'), 'direction', 'direction_type', ['type'], ['code'])
    op.alter_column('person', 'other_names',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.Text(),
               existing_nullable=True)
    # ### end Alembic commands ###
    session = orm.Session(bind=op.get_bind())
    session.add_all(BadgeColorORM.fill_table())
    session.add_all(DirectionTypeORM.fill_table())
    session.add_all(ParticipationRoleORM.fill_table())
    session.add_all(ParticipationTypeORM.fill_table())
    session.commit()

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('person', 'other_names',
               existing_type=sa.Text(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.drop_constraint(op.f('fk_direction_type_direction_type'), 'direction', type_='foreignkey')
    op.alter_column('direction', 'type',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_table('badge')
    op.drop_table('participation_role')
    op.drop_table('participation_type')
    op.drop_table('direction_type')
    op.drop_table('badge_color')
    # ### end Alembic commands ###
