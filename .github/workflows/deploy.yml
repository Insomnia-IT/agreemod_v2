name: CI/CD - main & dev

on:
  push:
    branches: [dev, main]
    paths:
      - '.github/**'
      - 'Dockerfile'
      - 'poetry.lock'
      - 'docker-compose.yml'
      - 'pyproject.toml'
      - 'alembic.ini'
      - 'alembic/**'
      - 'app/**'
      - 'bot/**'
      - 'database/**'
      - 'docker/**'
      - 'dictionaries/**'
      - 'rabbit/**'
      - 'updater/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SRV_SHH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SRV_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy via SSH
      run: |
        ssh ${{ secrets.SRV_USER_NAME }}@${{ secrets.SRV_HOST }} << 'EOF'
          set -e
          BRANCH="${{ github.ref_name }}"
          DIR="/opt/insomnia-app/agreemod/$BRANCH"
          REPO="https://github.com/${{ github.repository }}"

          mkdir -p "$DIR"
          cd "$DIR"

          if [ ! -d ".git" ]; then
            git clone "$REPO" .
          fi

          git fetch origin "$BRANCH"
          git checkout "$BRANCH"
          git pull origin "$BRANCH"

          cp .env.example .env

          if [ "$BRANCH" = "dev" ]; then
            sed -i "s|\$ENV_API_PORT|${{ secrets.ENV_API_PORT_DEV }}|g" .env
            sed -i "s|\$ENV_API_AUTH_USER|${{ secrets.ENV_API_AUTH_USER_DEV }}|g" .env
            sed -i "s|\$ENV_API_AUTH_PASSWORD|${{ secrets.ENV_API_AUTH_PASSWORD_DEV }}|g" .env
            sed -i "s|\$ENV_POSTGRES__PASSWORD|${{ secrets.ENV_POSTGRES__PASSWORD_DEV }}|g" .env
            sed -i "s|\$ENV_POSTGRES__PROXY|${{ secrets.ENV_POSTGRES__PROXY_DEV }}|g" .env
            sed -i "s|\$ENV_TELEBOT_TOKEN|${{ secrets.ENV_TELEBOT_TOKEN_DEV }}|g" .env
            sed -i "s|\$ENV_GRIST__SERVER|${{ secrets.ENV_GRIST__SERVER_DEV }}|g" .env
            sed -i "s|\$ENV_GRIST__DOC_ID|${{ secrets.ENV_GRIST__DOC_ID_DEV }}|g" .env
            sed -i "s|\$ENV_GRIST__API_KEY|${{ secrets.ENV_GRIST__API_KEY_DEV }}|g" .env
          elif [ "$BRANCH" = "main" ]; then
            sed -i "s|\$ENV_API_PORT|${{ secrets.ENV_API_PORT_MAIN }}|g" .env
            sed -i "s|\$ENV_API_AUTH_USER|${{ secrets.ENV_API_AUTH_USER_MAIN }}|g" .env
            sed -i "s|\$ENV_API_AUTH_PASSWORD|${{ secrets.ENV_API_AUTH_PASSWORD_MAIN }}|g" .env
            sed -i "s|\$ENV_POSTGRES__PASSWORD|${{ secrets.ENV_POSTGRES__PASSWORD_MAIN }}|g" .env
            sed -i "s|\$ENV_POSTGRES__PROXY|${{ secrets.ENV_POSTGRES__PROXY_MAIN }}|g" .env
            sed -i "s|\$ENV_TELEBOT_TOKEN|${{ secrets.ENV_TELEBOT_TOKEN_MAIN }}|g" .env
            sed -i "s|\$ENV_GRIST__SERVER|${{ secrets.ENV_GRIST__SERVER_MAIN }}|g" .env
            sed -i "s|\$ENV_GRIST__DOC_ID|${{ secrets.ENV_GRIST__DOC_ID_MAIN }}|g" .env
            sed -i "s|\$ENV_GRIST__API_KEY|${{ secrets.ENV_GRIST__API_KEY_MAIN }}|g" .env
          fi

          docker compose --project-name agreemod-$BRANCH down
          docker compose --project-name agreemod-$BRANCH build
          docker compose --project-name agreemod-$BRANCH up -d
          docker update --restart always $(docker ps --filter "name=agreemod-$BRANCH" -q)
        EOF
