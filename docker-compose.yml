version: '3.7'

services:
  postgres:
    image: postgres:15.2-alpine
    platform: linux/amd64
    shm_size: 1g
    restart: always
    volumes:
      - .docker-volumes/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES__USER}
      POSTGRES_PASSWORD: ${POSTGRES__PASSWORD}
      POSTGRES_DB: ${POSTGRES__NAME}
    healthcheck:
      test: pg_isready -d db_prod
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s

  alembic:
    platform: linux/amd64
    build:
      dockerfile: docker/alembic.dockerfile
      context: ./
    depends_on:
      postgres:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:3.13.0-management
    platform: linux/amd64
    hostname: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ__DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ__DEFAULT_PASS}
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  agreemod:
    platform: linux/amd64
    build:
      dockerfile: docker/api.dockerfile
      context: ./
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - 127.0.0.1:${API_PORT}:${API_PORT}
    expose:
      - ${API_PORT}

  updater:
    platform: linux/amd64
    build:
      dockerfile: docker/updater.dockerfile
      context: ./
    depends_on:
      postgres:
        condition: service_healthy
