version: '3.7'

networks:
  agree_net:
    driver: bridge

services:


  postgres:
    image: postgres:15.2-alpine
    platform: linux/amd64
    shm_size: 1g
    restart: always
    volumes:
      - .docker-volumes/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES__USER}
      POSTGRES_PASSWORD: ${POSTGRES__PASSWORD}
      POSTGRES_DB: ${POSTGRES__NAME}
    ports:
      - ${POSTGRES__PORT}:${POSTGRES__PORT}
    expose:
      - ${POSTGRES__PORT}
    networks:
      - agree_net


  alembic:
    build: docker/alembic.dockerfile
    context: ./
    volumes:
      - ./app/db:/opt/app/db
      - ./alembic:/opt/app/alembic
    working_dir: /opt/app
    entrypoint: /bin/sh
    depends_on:
      - postgres

  alembic:
    build: docker/alembic.dockerfile
    context: ./
    volumes:
      - ./app/db:/opt/app/db
      - ./alembic:/opt/app/alembic
    working_dir: /opt/app
    entrypoint: /bin/sh
    depends_on:
      - postgres

  rabbitmq:
    image: rabbitmq:3.13.0-management
    platform: linux/amd64
    hostname: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ__DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ__DEFAULT_PASS}
    ports:
      - ${RABBITMQ__WEB_PORT}:${RABBITMQ__WEB_PORT}
      - ${RABBITMQ__QUEUE_PORT}:${RABBITMQ__QUEUE_PORT}
    networks:
      - agree_net

  agreemod:
    platform: linux/amd64
    build:
      dockerfile: docker/api.dockerfile
      context: ./
    volumes:
      - ./app:/opt/app/app
      - ./db:/opt/app/db
      - ./.env:/opt/app/.env
    working_dir: /opt/app
    depends_on:
      - postgres
      - rabbitmq
    ports:
      - ${API_PORT}:${API_PORT}
    expose:
      - ${API_PORT}
    entrypoint: ["poetry", "run", "python", "-m", "app.main"]
    tty: true
    stdin_open: true
    environment:
      - POSTGRES__HOST=postgres
    networks:
      - agree_net

  updater:
    platform: linux/amd64
    build:
      dockerfile: docker/updater.dockerfile
      context: ./
    volumes:
      - ./.env:/opt/app/.env
      - ./alembic.ini:/opt/app/alembic.ini
      - ./alembic:/opt/app/alembic
      - ./updater:/opt/app/updater
      - ./db:/opt/app/db
      - ./app/models/:/opt/app/app/models
      - ./app/dictionaries/:/opt/app/app/dictionaries
      - ./app/errors:/opt/app/app/errors
    environment:
      - POSTGRES__HOST=postgres

    working_dir: /opt/app
    depends_on:
      - postgres
    entrypoint: ["/bin/bash", "-c", "alembic upgrade head && poetry run python -m updater.main"]
    tty: true
    stdin_open: true
    networks:
      - agree_net